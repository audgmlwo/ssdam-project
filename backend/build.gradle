plugins {
	id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'eclipse' 
}

group = 'com.edu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


eclipse.wtp.facet {
    
    facet name: 'jst.web', version: '5.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	//JSP 및 JSTL 사용 설정
	implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	//smtp
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	//jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱을 위한 모듈
    
   	//security
    implementation 'org.springframework.boot:spring-boot-starter-security' //  Spring Security 기본 의존성 추가
    implementation 'org.springframework.security:spring-security-core' //  인증 관련 기능 사용
    implementation 'org.springframework.security:spring-security-web' //    웹 보안 기능 사용
    implementation 'org.springframework.security:spring-security-config' // Security 설정 가능
    
    //OAuth2(소셜로그인)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    
    //1대1 채팅
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'    
	
	//1대1 채팅에 jpa 사용
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}